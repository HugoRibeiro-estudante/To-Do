// antes

db.stats
[Function: stats] AsyncFunction {
  apiVersions: [ 0, 0 ],
  returnsPromise: true,
  serverVersions: [ '0.0.0', '999.999.999' ],
  topologies: [ 'ReplSet', 'Sharded', 'LoadBalanced', 'Standalone' ],
  returnType: { type: 'unknown', attributes: {} },
  deprecated: false,
  platforms: [ 'Compass', 'Browser', 'CLI' ],
  isDirectShellCommand: false,
  acceptsRawInput: false,
  shellCommandCompleter: undefined,
  help: [Function (anonymous)] Help
}

db.to_do.find({name : "Projeto 1"}).explain("executionStats")
{
  explainVersion: '2',
  queryPlanner: {
    namespace: 'to_do.to_do',
    indexFilterSet: false,
    parsedQuery: { name: { '$eq': 'Projeto 1' } },
    queryHash: '1AD872C6',
    planCacheKey: '3D8932BF',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      queryPlan: {
        stage: 'COLLSCAN',
        planNodeId: 1,
        filter: { name: { '$eq': 'Projeto 1' } },
        direction: 'forward'
      },
      slotBasedPlan: {
        slots: '$$RESULT=s5 env: { s3 = 1697379606984 (NOW), s2 = Nothing (SEARCH_META), s7 = "Projeto 1", s1 = TimeZoneDatabase(Pacific/Efate...Indian/Antananarivo) (timeZoneDB) }',
        stages: '[1] filter {traverseF(s4, lambda(l1.0) { ((l1.0 == s7) ?: false) }, false)} \n' +
          '[1] scan s5 s6 none none none none lowPriority [s4 = name] @"0893b92b-5561-4330-b76d-dfc8c3f0ddeb" true false '
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 1,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 30,
    executionStages: {
      stage: 'filter',
      planNodeId: 1,
      nReturned: 1,
      executionTimeMillisEstimate: 0,
      opens: 1,
      closes: 1,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      numTested: 30,
      filter: 'traverseF(s4, lambda(l1.0) { ((l1.0 == s7) ?: false) }, false) ',
      inputStage: {
        stage: 'scan',
        planNodeId: 1,
        nReturned: 30,
        executionTimeMillisEstimate: 0,
        opens: 1,
        closes: 1,
        saveState: 0,
        restoreState: 0,
        isEOF: 1,
        numReads: 30,
        recordSlot: 5,
        recordIdSlot: 6,
        fields: [ 'name' ],
        outputSlots: [ Long("4") ]
      }
    }
  },
  command: { find: 'to_do', filter: { name: 'Projeto 1' }, '$db': 'to_do' },
  serverInfo: {
    host: 'hugo-EA-A520M-E',
    port: 27017,
    version: '7.0.2',
    gitVersion: '02b3c655e1302209ef046da6ba3ef6749dd0b62a'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeEngine'
  },
  ok: 1
}


//depois

db.to_do.createIndex({"name": 1, "tasks.title": 1 })

db.stats()
{
  db: 'to_do',
  collections: Long("1"),
  views: Long("0"),
  objects: Long("30"),
  avgObjSize: 706.3,
  dataSize: 21189,
  storageSize: 45056,
  indexes: Long("2"),
  indexSize: 40960,
  totalSize: 86016,
  scaleFactor: Long("1"),
  fsUsedSize: 86643167232,
  fsTotalSize: 470887243776,
  ok: 1
}

db.to_do.find({name: "Projeto 1"}).explain("executionStats")
{
  explainVersion: '2',
  queryPlanner: {
    namespace: 'to_do.to_do',
    indexFilterSet: false,
    parsedQuery: { name: { '$eq': 'Projeto 1' } },
    queryHash: '1AD872C6',
    planCacheKey: '0D88508C',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      queryPlan: {
        stage: 'FETCH',
        planNodeId: 2,
        inputStage: {
          stage: 'IXSCAN',
          planNodeId: 1,
          keyPattern: { name: 1, 'tasks.title': 1 },
          indexName: 'name_1_tasks.title_1',
          isMultiKey: true,
          multiKeyPaths: { name: [], 'tasks.title': [ 'tasks' ] },
          isUnique: false,
          isSparse: false,
          isPartial: false,
          indexVersion: 2,
          direction: 'forward',
          indexBounds: {
            name: [ '["Projeto 1", "Projeto 1"]' ],
            'tasks.title': [ '[MinKey, MaxKey]' ]
          }
        }
      },
      slotBasedPlan: {
        slots: '$$RESULT=s11 env: { s3 = 1697379796456 (NOW), s6 = KS(3C50726F6A65746F203100F0FE04), s5 = KS(3C50726F6A65746F2031000A0104), s2 = Nothing (SEARCH_META), s10 = {"name" : 1, "tasks.title" : 1}, s1 = TimeZoneDatabase(Pacific/Efate...Indian/Antananarivo) (timeZoneDB) }',
        stages: '[2] nlj inner [] [s4, s7, s8, s9, s10] \n' +
          '    left \n' +
          '        [1] unique [s4] \n' +
          '        [1] cfilter {(exists(s5) && exists(s6))} \n' +
          '        [1] ixseek s5 s6 s9 s4 s7 s8 [] @"0893b92b-5561-4330-b76d-dfc8c3f0ddeb" @"name_1_tasks.title_1" true \n' +
          '    right \n' +
          '        [2] limit 1 \n' +
          '        [2] seek s4 s11 s12 s7 s8 s9 s10 [] @"0893b92b-5561-4330-b76d-dfc8c3f0ddeb" true false \n'
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 1,
    executionTimeMillis: 0,
    totalKeysExamined: 2,
    totalDocsExamined: 1,
    executionStages: {
      stage: 'nlj',
      planNodeId: 2,
      nReturned: 1,
      executionTimeMillisEstimate: 0,
      opens: 1,
      closes: 1,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      totalDocsExamined: 1,
      totalKeysExamined: 2,
      collectionScans: 0,
      collectionSeeks: 1,
      indexScans: 0,
      indexSeeks: 1,
      indexesUsed: [ 'name_1_tasks.title_1' ],
      innerOpens: 1,
      innerCloses: 1,
      outerProjects: [],
      outerCorrelated: [ Long("4"), Long("7"), Long("8"), Long("9"), Long("10") ],
      outerStage: {
        stage: 'unique',
        planNodeId: 1,
        nReturned: 1,
        executionTimeMillisEstimate: 0,
        opens: 1,
        closes: 1,
        saveState: 0,
        restoreState: 0,
        isEOF: 1,
        dupsTested: 2,
        dupsDropped: 1,
        keySlots: [ Long("4") ],
        inputStage: {
          stage: 'cfilter',
          planNodeId: 1,
          nReturned: 2,
          executionTimeMillisEstimate: 0,
          opens: 1,
          closes: 1,
          saveState: 0,
          restoreState: 0,
          isEOF: 1,
          numTested: 1,
          filter: '(exists(s5) && exists(s6)) ',
          inputStage: {
            stage: 'ixseek',
            planNodeId: 1,
            nReturned: 2,
            executionTimeMillisEstimate: 0,
            opens: 1,
            closes: 1,
            saveState: 0,
            restoreState: 0,
            isEOF: 1,
            indexName: 'name_1_tasks.title_1',
            keysExamined: 2,
            seeks: 1,
            numReads: 3,
            indexKeySlot: 9,
            recordIdSlot: 4,
            snapshotIdSlot: 7,
            indexIdentSlot: 8,
            outputSlots: [],
            indexKeysToInclude: '00000000000000000000000000000000',
            seekKeyLow: 's5 ',
            seekKeyHigh: 's6 '
          }
        }
      },
      innerStage: {
        stage: 'limit',
        planNodeId: 2,
        nReturned: 1,
        executionTimeMillisEstimate: 0,
        opens: 1,
        closes: 1,
        saveState: 0,
        restoreState: 0,
        isEOF: 1,
        limit: 1,
        inputStage: {
          stage: 'seek',
          planNodeId: 2,
          nReturned: 1,
          executionTimeMillisEstimate: 0,
          opens: 1,
          closes: 1,
          saveState: 0,
          restoreState: 0,
          isEOF: 0,
          numReads: 1,
          recordSlot: 11,
          recordIdSlot: 12,
          seekKeySlot: 4,
          snapshotIdSlot: 7,
          indexIdentSlot: 8,
          indexKeySlot: 9,
          indexKeyPatternSlot: 10,
          fields: [],
          outputSlots: []
        }
      }
    }
  },
  command: { find: 'to_do', filter: { name: 'Projeto 1' }, '$db': 'to_do' },
  serverInfo: {
    host: 'hugo-EA-A520M-E',
    port: 27017,
    version: '7.0.2',
    gitVersion: '02b3c655e1302209ef046da6ba3ef6749dd0b62a'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeEngine'
  },
  ok: 1
}


